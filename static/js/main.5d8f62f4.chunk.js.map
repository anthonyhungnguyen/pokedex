{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions/actions.js","constants/constants.js","serviceWorker.js","reducers/reducers.js","index.js"],"names":["Card","_ref","id","name","num","img","listItems","type","map","item","react_default","a","createElement","className","alt","concat","src","CardList","pokemons","pokemon","i","components_Card","key","SearchBox","onSearchChange","placeholder","onChange","Scroll","props","style","overflow","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onRequestPokemons","_this$props","searchField","isPending","filteredPokemons","filter","toLowerCase","includes","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchPokemons","requestPokemons","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","Boolean","window","location","hostname","match","initialStateSearch","initialStateRequest","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d8f62f4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, num, name, img, type }) => {\r\n\tconst listItems = type.map(item => <li className='pa2 ba bw2 br4 grow dib'>{item}</li>);\r\n\treturn (\r\n\t\t<div className='bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt={`robot${id}`} src={img} />\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className='hover-light-red f3 lh-copy'>{name}</h3>\r\n\t\t\t\t<ul className='list pl0 flex justify-around'>{listItems}</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ pokemons }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{pokemons.map((pokemon, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tid={pokemons[i].id}\r\n\t\t\t\t\t\tname={pokemons[i].name}\r\n\t\t\t\t\t\timg={pokemons[i].img}\r\n\t\t\t\t\t\ttype={pokemons[i].type}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ onSearchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='pa3 ba b--purple bg-light-yellow'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='type to search'\r\n\t\t\t\tonChange={onSearchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = props => {\r\n\treturn <div style={{ overflow: 'auto', height: '1080px' }}>{props.children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError : false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn this.state.hasError ? <h1>Ooooops. That is not good</h1> : this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestPokemons } from '../actions/actions';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsearchField : state.searchPokemons.searchField,\r\n\t\tpokemons    : state.requestPokemons.pokemons,\r\n\t\tisPending   : state.requestPokemons.isPending,\r\n\t\terror       : state.requestPokemons.error\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSearchChange    : event => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestPokemons : () => dispatch(requestPokemons())\r\n\t};\r\n};\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tpokemons : []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestPokemons();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { searchField, onSearchChange, pokemons, isPending } = this.props;\r\n\t\tconst filteredPokemons = pokemons.filter(pokemon =>\r\n\t\t\tpokemon.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t\t);\r\n\t\treturn isPending ? (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f-subheadline lh-title'>Loading</h1>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f-subheadline lh-title'>Pokedex</h1>\r\n\t\t\t\t<SearchBox onSearchChange={onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList pokemons={filteredPokemons} />\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_POKEMONS_PENDING,\r\n\tREQUEST_POKEMONS_SUCCESS,\r\n\tREQUEST_POKEMONS_FAILED\r\n} from '../constants/constants';\r\n\r\nexport const setSearchField = text => ({\r\n\ttype    : CHANGE_SEARCH_FIELD,\r\n\tpayload : text\r\n});\r\n\r\nexport const requestPokemons = () => dispatch => {\r\n\tdispatch({ type: REQUEST_POKEMONS_PENDING });\r\n\tfetch('https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_POKEMONS_SUCCESS, payload: data['pokemon'] }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_POKEMONS_FAILED, payload: error }));\r\n};\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE-SEARCH_FIELD';\r\n\r\nexport const REQUEST_POKEMONS_PENDING = 'REQUEST_POKEMONS_PENDING';\r\nexport const REQUEST_POKEMONS_SUCCESS = 'REQUEST_POKEMONS_SUCCESS';\r\nexport const REQUEST_POKEMONS_FAILED = 'REQUEST_POKEMONS_FAILED';\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_POKEMONS_PENDING,\r\n\tREQUEST_POKEMONS_SUCCESS,\r\n\tREQUEST_POKEMONS_FAILED\r\n} from '../constants/constants';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField : ''\r\n};\r\n\r\nexport const searchPokemons = (state = initialStateSearch, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn { ...state, searchField: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialStateRequest = {\r\n\tpokemons  : [],\r\n\tisPending : false,\r\n\terror     : ''\r\n};\r\n\r\nexport const requestPokemons = (state = initialStateRequest, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_POKEMONS_PENDING:\r\n\t\t\treturn { ...state, isPending: true };\r\n\t\tcase REQUEST_POKEMONS_SUCCESS:\r\n\t\t\treturn { ...state, isPending: false, pokemons: action.payload };\r\n\t\tcase REQUEST_POKEMONS_FAILED:\r\n\t\t\treturn { ...state, isPending: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\nimport { searchPokemons, requestPokemons } from './reducers/reducers';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ searchPokemons, requestPokemons });\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}